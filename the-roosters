$install_puppet_master_centos7 = <<SCRIPT
peinstaller_url="$1"
peanswers_url="$2"
r10kyaml_url="$3"
master_hostname="$4"
master_domain="$5"
master_ip="$6"
master_hosts="$7"
web_proxy_ip_port="" # http://192.168.43.181:3128"
eyaml_keys_url="https://raw.githubusercontent.com/zoojar/vagrantlab-puppet/master/eyaml"
hiera_yaml_url="https://raw.githubusercontent.com/zoojar/vagrantlab-puppet/master/hiera.yaml"
autosign_exe_url="https://raw.githubusercontent.com/zoojar/vagrantlab-puppet/master/autosign.sh"
api_cert="/etc/puppetlabs/puppet/ssl/certs/$master_hostname.$master_domain.pem"
api_key="/etc/puppetlabs/puppet/ssl/private_keys/$master_hostname.$master_domain.pem"
api_cacert="/etc/puppetlabs/puppet/ssl/certs/ca.pem"

echo "Adding [$master_hosts] to hosts file..."
sudo echo -e "$master_hosts\n$(cat /etc/hosts)" > /etc/hosts

echo "Disabling firewall"
sudo systemctl mask firewalld ; sudo systemctl stop firewalld

if ! [ "$web_proxy_ip_port" = "" ]; then
  echo "Adding temporary proxy for yum (to allow faster master install) [$web_proxy_ip_port]..."
  sudo echo -e "[main]\nproxy=$web_proxy_ip_port" > /etc/yum/yum.conf
  export http_proxy=$web_proxy_ip_port
fi

echo "Downloading puppet from $peinstaller_url and extracting to /tmp/peinstaller..." 
wget -q $peinstaller_url -O /tmp/peinstaller.tar.gz
mkdir /tmp/peinstaller
tar -xf /tmp/peinstaller.tar.gz --strip-components=1 -C /tmp/peinstaller

echo "Downloading answers file from $peanswers_url..."
curl -L $peanswers_url > /tmp/master.answers

echo "Installing puppet..."
sudo /tmp/peinstaller/puppet-enterprise-installer -a /tmp/master.answers

echo "Disabling automatic data binding"
sudo puppet config set data_binding_terminus none --section master

echo "Add the hiera.yaml to the codedir..."
sudo curl -L "${hiera_yaml_url}" > `sudo puppet config print codedir`/hiera.yaml

echo "Adding the hiera-eyaml puppet gem..."
sudo puppet apply -e "package{'hiera-eyaml':ensure=>'2.0.8',provider=>'puppet_gem'}" -v
sudo mkdir /etc/puppetlabs/puppet/keys

echo "Adding hiera eyaml private key ${eyaml_keys_url}_private_key.pkcs7.pem: $(curl -sL ${eyaml_keys_url}_private_key.pkcs7.pem)"
curl -L "${eyaml_keys_url}_private_key.pkcs7.pem" > /etc/puppetlabs/puppet/keys/private_key.pkcs7.pem
chmod 0600 /etc/puppetlabs/puppet/keys/private_key.pkcs7.pem 

echo "Adding hiera eyaml public key ${eyaml_keys_url}_public_key.pkcs7.pem: $(curl -sL ${eyaml_keys_url}_public_key.pkcs7.pem)"
curl -L "${eyaml_keys_url}_public_key.pkcs7.pem" > /etc/puppetlabs/puppet/keys/public_key.pkcs7.pem
chmod 0644 /etc/puppetlabs/puppet/keys/public_key.pkcs7.pem

echo "Installing git, for r10k with shellgit..."
sudo yum install git -y

echo "Configuring r10k with puppet from $r10kyaml_url: $(curl -sL $r10kyaml_url)"
curl -L $r10kyaml_url > /etc/puppetlabs/r10k/r10k.yaml
sudo r10k deploy environment -pv

if ! [ "$proxy_ip_port" = "" ]; then
  echo "Removing temporary proxy for yum (to allow faster master install) [$web_proxy_ip_port]..."
  sudo rm /etc/yum/yum.conf
fi

echo "Updating classes via classifier API..."
sudo curl -X POST https://$master_hostname.$master_domain:4433/classifier-api/v1/update-classes --cert $api_cert --key $api_key --cacert $api_cacert -v

echo "Adding the puppetclassify puppet gem..."
sudo puppet apply -e "package{'puppetclassify':ensure=>'0.1.0',provider=>'puppet_gem'}" -v
echo "Classifying nodes with module https://github.com/zoojar/prosvcs-node_manager..."
sudo puppet apply -e "include 'profile::master_classifier'" -v

echo "Configuring policy-based autosigning..."
echo 'd41d8cd98f00b204e9800998ecf8427e' >/etc/puppetlabs/puppet/global-psk
curl -L "${autosign_exe_url}" > /etc/puppetlabs/puppet/autosign.sh
sudo chmod 500 /etc/puppetlabs/puppet/autosign.sh ; sudo chown pe-puppet /etc/puppetlabs/puppet/autosign.sh
sudo puppet config set autosign /etc/puppetlabs/puppet/autosign.sh --section master

echo "Adding gitserver-01.lab.local to rbac certificate whitelist for classifier management via api..."
sudo echo -e "\ngitserver-01.lab.local" >> /etc/puppetlabs/console-services/rbac-certificate-whitelist

echo "restarting pe-puppetserver service for autosigning, eyaml & rbac whitelist config to take affect..."
sudo service pe-puppetserver restart

echo "Running background sleep to sign compilers (allowing 15 mintutes for provisioning)..."
( sleep 900 ; sudo puppet cert --allow-dns-alt-names sign lei-compiler-01.lab.local & ) &
( sleep 900 ; sudo puppet cert --allow-dns-alt-names sign lei-compiler-02.lab.local & ) &

SCRIPT



$install_puppet_compiler = <<SCRIPT
master_ip="$1"
master_hostname="$2"
master_domain="$3"
dns_alt_names="$4"
master_hosts="$5"

echo "Adding [$master_hosts] to hosts file..."
sudo echo -e "$master_hosts\n$(cat /etc/hosts)" > /etc/hosts

echo "Disabling firewall"
sudo systemctl mask firewalld ; sudo systemctl stop firewalld

echo "Setting up custom csr attributes for autosigning..."
sudo mkdir -p /etc/puppetlabs/puppet
printf "custom_attributes:\n  1.2.840.113549.1.9.7: d41d8cd98f00b204e9800998ecf8427e" >  /etc/puppetlabs/puppet/csr_attributes.yaml 

echo "Installing puppet compile master from https://$master_hostname.$master_domain:8140/packages/current/install.bash..."
curl -k https://$master_hostname.$master_domain:8140/packages/current/install.bash | sudo bash -s main:dns_alt_names=$dns_alt_names

echo "Configuring puppet with master server $master_hostname.$master_domain..."
sudo puppet config set server $master_hostname.$master_domain,

SCRIPT



$install_puppet_agent_linux = <<SCRIPT
master_ip="$1"
master_hostname="$2"
master_domain="$3"

echo "Adding [$master_ip $master_hostname.$master_domain $master_hostname] to hosts file..."
sudo echo -e "$master_ip $master_hostname.$master_domain $master_hostname\n$(cat /etc/hosts)" > /etc/hosts

echo "Disabling firewall"
sudo systemctl mask firewalld ; sudo systemctl stop firewalld

echo "Setting up custom csr attributes for autosigning..."
sudo mkdir -p /etc/puppetlabs/puppet
printf "extension_requests:\n  pp_preshared_key: 'd41d8cd98f00b204e9800998ecf8427e'" >  /etc/puppetlabs/puppet/csr_attributes.yaml 

echo "Installing puppet from https://$master_hostname.$master_domain:8140/packages/current/install.bash..."
curl -k https://$master_hostname.$master_domain:8140/packages/current/install.bash | sudo bash

echo "Configuring puppet with master server $master_hostname.$master_domain..."
sudo puppet config set server $master_hostname.$master_domain

SCRIPT



$install_puppet_agent_windows = <<SCRIPT
$master_ip=$Args[0]
$master_hostname=$Args[1]
$master_domain=$Args[2]
$peinstaller_url_windows=$Args[3]
$web_proxy_ip_port=$Args[4]

echo "Adding [$master_ip $master_hostname.$master_domain] to hosts file..."
add-content "C:\\Windows\\System32\\drivers\\etc\\hosts" "$master_ip $master_hostname.$master_domain"

echo "Setting up custom csr attributes for autosigning..."
mkdir 'C:\\Programdata\\PuppetLabs\\Puppet\\etc'
echo "custom_attributes:`r`n  1.2.840.113549.1.9.7: d41d8cd98f00b204e9800998ecf8427e" >  'C:\\Programdata\\PuppetLabs\\Puppet\\etc\\csr_attributes.yaml'

echo "Downloading puppet from $peinstaller_url_windows $web_proxy_ip_port..."
wget $peinstaller_url_windows -outfile "c:\\windows\\temp\\puppet-enterprise-installer.msi" -Proxy $web_proxy_ip_port

echo "Installing puppet..."
Start-Process -FilePath msiexec -ArgumentList /i, "C:\\Windows\\Temp\\puppet-enterprise-installer.msi", /quiet -wait 

echo "Configuring puppet with master server $master_hostname.$master_domain..."
$env:Path += ";C:\\Program Files\\Puppet Labs\\Puppet\\bin"
puppet config set server, "$master_hostname.$master_domain"

SCRIPT
